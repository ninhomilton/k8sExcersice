# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: none #[ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on self-hosted
    runs-on: self-hosted
    env:
      DOCKER_REPOSITORY: localhost:5000
      IMAGE_NAME: hello_world
      IMAGE_TAG: ${{ github.run_number }}
      CLUSTER_NAME: k8s-cluster
      RESOURCE_GROUP: rg-k8s-cluster
      DOCKER_PASSWORD: ${{ secrets.DUMMY }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    # docker build . --tag $DOCKER_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG
    # echo ${{ secrets.DOCKER_REPOSITORY_PASSWORD }} | docker login -u ${env:DOCKER_REPOSITORY} --password -stdin
    # cat /github/mypjpp.txt | docker login -u miltonortegon --password-stdin
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a set of commands using the runners shell
      - name: Build app
        run: mvn install
      - name: Build docker image
        shell: powershell
        run: |
          docker build . --tag ${env:DOCKER_REPOSITORY}/${env:IMAGE_NAME}:${env:IMAGE_TAG}
      #- name: Docker Login
      #  run:
      #    docker login -u ${env.DOCKER_REPOSITORY} --password ${{ secrets.DOCKER_REPOSITORY_PASSWORD }}
      - name: Push docker image
        run: docker push ${env:DOCKER_REPOSITORY}/${env:IMAGE_NAME}:${env:IMAGE_TAG}
      - name: change k8s files
        run: sed -i -e 's/{env:IMAGE_TAG}/${env:IMAGE_TAG}/g' kubernetes/hw.deploy.yaml
      - name: deploy image into k8s cluster
        run: kubectl create -f kubernetes/hw.deploy.yaml